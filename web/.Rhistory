View(encounter)
encounter %>%
mutate(
visit_duration = as.duration(date_out - date_in),
exceeds_limit = visit_duration > duration(minute = 30, second = 10)
) %>%
select("Patient ID", visit_duration, exceeds_limit)
View(hospitals)
encounter %>%
mutate(follow_up = date_in + days(14))
weeks(3)
period(3, units = "weeks")
encounter %>%
mutate(
span = interval(start = date_in, end = date_out)
)
encounter %>%
mutate(
span = date_in, %--% date_out
encounter %>%
mutate(
span = date_in %--% date_out
)
celeb
celeb1
"Born On: Wednesday, January 01, 1922"
born_on <- stamp_date("Born On: Wednesday, January 01, 1922")
born_on(ymd("1922-01-01"))
View(celeb1)
celeb1 %>%
mutate(
formatted_birthday = born_on(birthday)
)
?strftime
celeb1 %>%
mutate(
birthday = format(birthday, format = "%A, %B %d, %Y")
)
ed <- read_csv("educ.csv")
View(ed)
ed <- read_csv("educ.csv")
View(ed)
ggplot(ed %>%
group_by(survey) %>%
mutate(perc = schstat/sum(schstat)) %>%
ungroup(),
aes(x=age, y=perc, group=survey, colour = survey)) +
geom_line() +
geom_point()
ed <- read_csv("educ.csv")
View(ed)
ed <- read_csv("educ.csv")
View(ed)
ed <- read_csv("educ.csv")
View(ed)
ggplot(ed %>%
group_by(survey) %>%
mutate(perc = schstat/sum(schstat)) %>%
ungroup(),
aes(x=age, y=perc, group=survey, colour = survey)) +
geom_line() +
geom_point()
View(ed)
ggplot(ed %>%
group_by(wave) %>%
mutate(perc = schstat/sum(schstat)) %>%
ungroup(),
aes(x=age, y=perc, group=wave, colour = wave)) +
geom_line() +
geom_point()
ggplot(ed %>%
group_by(survey) %>%
mutate(perc = schstat/sum(schstat)) %>%
ungroup(),
aes(x=age, y=perc, group=survey, colour = survey)) +
geom_line() +
geom_point()
et.seed(1)
set.seed(1)
dfComb <- data.frame(hour_adj = rep(0:4, 2),
count = sample(10:50, 10, replace = T),
word = c(rep("A", 5), rep("B", 5)))
View(dfComb)
ggplot(dfComb %>%
group_by(word) %>%
mutate(perc = count/sum(count)) %>%
ungroup(),
aes(x=hour_adj, y=perc, group=word, colour = word)) +
geom_line() +
geom_point() +
ggtitle(paste("Hourly Frequencies of Tweets")) +
xlab("Hour of Day") +
ylab("Count") +
scale_colour_discrete("Word", breaks=c("A","B"), labels=c("yid", "abbo")) +
scale_y_continuous(labels = scales::percent)
ed <- read_csv("educ.csv")
View(ed)
View(ed)
sum(schstat)
sum(ed$schstat)
ggplot(ed %>%
group_by(survey) %>%
mutate(perc = schstat/sum(schstat)) %>%
ungroup(),
aes(x=age, y=perc, group=survey, colour = survey)) +
geom_line() +
geom_point() +
ggtitle(paste("Percentage")) +
xlab("Age") +
ylab("Count") +
scale_colour_discrete("survey", breaks=c("A","B"), labels=c("2002", "2005")) +
scale_y_continuous(labels = scales::percent)
View(states)
View(covid_il)
View(covid_updated)
vaccines <- read_csv("vaccines.csv")
View(vaccines)
View(vaccines)
levels(vaccines_$vaccines)
levels(vaccines$vaccines)
vaccine <- read_csv("vaccines.csv")
levels(vaccine$vaccines)
vaccine
levels(vaccine$vaccines)
vaccine[, "vaccines"] <- as.factor(vaccine[, 'vaccines'])
vaccine
vaccine <- read_csv("vaccines.csv")
vaccine <- read_csv("vaccines.csv", show_col_types = FALSE)
spec(vaccine)
levels(vaccine$vaccines)
vaccine <- read_csv("vaccines.csv", stringsAsFactors=T show_col_types = FALSE)
vaccine <- read_csv("vaccines.csv", stringsAsFactors=T)
vaccine <- read_csv(file.choose("vaccines.csv"), stringsAsFactors=T)
> lapply(vaccine, levels)
lapply(vaccine, levels)
apply(vaccine, levels)
apply(vaccine, 3, levels)
install.packages("apply")
lapply(vaccine, 3, levels)
apply(vaccine, 5, levels)
apply(vaccine, 6, levels)
dim(vaccine)
apply(vaccine, 223, levels)
apply(vaccine, function(i) levels(factor(i)))
lapply(vaccine, function(i) levels(factor(i)))
spec(vaccine)
levels(vaccine$vaccines)
lapply(vaccine, levels)
vaccine <- read_csv(vaccines.csv, stringsAsFactors=T)
vaccine <- read_csv("vaccines.csv", stringsAsFactors=FALSE)
vaccine <- read.csv("vaccines.csv", colClasses = "character")
spec(vaccine)
levels(vaccine$vaccines)
View(vaccine)
apply(vaccine, levels)
lapply(vaccine, levels)
point <- as.factor(vaccine$vaccines)
vaccine$vaccines <- as.factor(vaccine$vaccines)
View(vaccine)
spec(vaccine)
vaccine <- read_csv("vaccines.csv")
vaccine$vaccines <- as.factor(vaccine$vaccines)
spec(vaccine)
levels(vaccine$vaccines)
lapply(vaccine, levels)
levels(vaccine$vaccines)
factor(vaccine$vaccines)
library(dplyr)
library(forcats)
View(adverse1)
View(adv1)
View(adv)
levels(adv$died)
levels(adv1$died)
spec(adv1)
spec(adverse)
spec(adv)
spec(adverse1)
View(adverse1)
levels(adverse1$died)
adv1$died <- as.factor(adv1$died)
adverse1$died <- as.factor(adverse1$died)
spec(adverse1)
lapply(adverse1, levels)
levels(adverse1$died)
adverse1 <-
adverse1 %>%
mutate(
died = fct_relevel(
died,
c(
"YES",
"NO",
"NA"
)
)
)
View(adv1)
adverse1 %>%
ggplot(aes(x = V_ADMINBY)) +
geom_bar()
adverse1 %>%
mutate(V_ADMINBY = fct_infreq(V_ADMINBY)) %>%
ggplot(aes(x = V_ADMINBY)) +
geom_bar()
adverse1 %>%
mutate(V_ADMINBY = fct_rev(fct_infreqV_ADMINBY))) %>%
adverse1 %>%
mutate(V_ADMINBY = fct_rev(fct_infreq(V_ADMINBY))) %>%
ggplot(aes(x = V_ADMINBY)) +
geom_bar()
clinical <- setDT(read.sas7bdat("demog.sas7bdat"))
install.packages("setDT")
install.packages("haven")
library(haven)
clinical <- setDT(read.sas7bdat("demog.sas7bdat"))
clinical <- read_sas("demog.sas7bdat")
View(clinical)
clinical1 <- read_sas("demographics.sas7bdat")
View(clinical1)
clinical %>%
ggplot(aes(RACE, AGE_N)) +
geom_boxplot()
View(adverse1)
View(bmi_ren)
View(adverse1)
View(covid_il)
View(covid_updated)
View(encounter)
View(hospitals)
View(msleep)
View(result)
is.character(adv$vaers_id)
adv %>%
mutate(
vaers_id_length = str_length(vaers_id)
)
if(!require('stringr')) {
install.packages('stringr')
library('stringr')
}
adv %>%
mutate(
vaers_id_length = str_length(vaers_id)
)
adv %>%
filter(str_length(vaers_id) != 7)
adverse1
View(adverse1)
adverse1 %>%
mutate(
vaers_id = str_trim(vaers_id, side = "left")
)
states
states %>%
mutate(
state = str_pad(state, width = 20, side = "both")
)
states %>%
mutate(
state = str_c(state, "United States", sep = ", ")
)
drug <- read_csv("drug200.csv")
View(drug)
drug
str_flatten(drug, collapse = ", ")
library(stringr)
str_flatten(drug, collapse = ", ")
wages <- read_csv("wages.csv")
View(wages)
mod_ehwa <- lm(log(income) ~ ed + height + race + age, data = wages)
mod_ehwa <- lm(log(earn) ~ ed + height + race + age, data = wages)
mod_ehwa
library(broom)
tidy(mod_ehwa)
tidy(mod_ehwa) %>%
filter(p.value > 0.05)
class(mod_ehwa)
mod_e   <- lm(log(earn) ~ ed, data = wages)
mod_eh  <- lm(log(earn) ~ ed + height, data = wages)
mod_ehw <- lm(log(earn) ~ ed + height + race, data = wages)
mod_e   <- lm(earn) ~ ed, data = wages)
mod_e1   <- lm(earn) ~ ed, data = wages)
mod_e1   <- lm(earn ~ ed, data = wages)
mod_e   <- lm(earn ~ ed, data = wages)
mod_e   <- lm(earn ~ ed, data = wages)
mod_eh  <- lm(earn ~ ed + height, data = wages)
mod_ehw <- lm(earn ~ ed + height + race, data = wages)
mod_e
glance(mod_e)
bind_rows(
"mod_e"   = glance(mod_e),
"mod_eh"  = glance(mod_eh),
"mod_ehw" = glance(mod_ehw),
.id = "id"
) %>%
arrange(AIC)
iris
fit <- lm(Petal.Width ~ Petal.Length, data = iris)
fit
fit %>%
augment(data = iris)
fit %>%
augment(data = iris) %>%
filter(.cooksd > 1)
iris %>%
augment(fit, data = .) %>%
filter(.cooksd > 1)
new_iris %>%
augment(fit, newdata = .)
fit <- lm(Petal.Width ~ Petal.Length, data = iris)
fit
new_iris %>%
augment(fit, newdata = .)
library(broom)
new_iris %>%
augment(fit, newdata = .)
new_iris %>%
augment(iris, fit, newdata = .)
new_iris %>%
augment(fit, iris, newdata = .)
new_iris %>% augment(fit, newdata = .)
aov_race <- aov(log(earn) ~ race, data = wages)
aov_race
tidy(aov_race)
aov_sex <- aov(log(earn) ~ sex, data = wages)
aov_sex
tidy(aov_sex)
ovarian
ovarian <- read.csv("ovarian.csv")
library(survival)
head(ovarian)
ovarian %>%
mutate(surv_object = Surv(time = futime, event = fustat))
library(survminer)
install.packages("survminer")
library(survminer)
ovarian %>%
mutate(surv_object = Surv(time = futime, event = fustat)) %>%
surv_fit(formula = surv_object ~ rx) %>%
ggsurvplot()
ovarian <-
ovarian %>%
mutate(surv_object = Surv(time = futime, event = fustat))
survdiff(surv_object ~ rx, data = ovarian) %>%
broom::glance()
fit_coxph <- ovarian %>%
mutate(surv_object = Surv(time = futime, event = fustat)) %>%
coxph(formula = surv_object ~ rx + resid.ds)
tidy(fit_coxph)
fit_coxph %>% tidy(exponentiate = TRUE)
quaker_sales
library(dplyr)
library(gt
library(gt)
library(gt)
quaker_sales
View(dfComb)
View(drug)
View(ed)
View(hospitals)
View(hospitals)
View(msleep)
View(msleep)
View(result)
View(result)
result %>%
group_by(cab_type) %>%
summarize(
avg_price = mean(price),
total_dist = sum(distance)
)
result %>%
group_by(cab_type) %>%
summarize(
avg_price = mean(price),
total_dist = sum(distance)
) %>%
gt()
result
result %>%
gt() %>%
cols_label(
product = "name"
)
result %>%
gt() %>%
tab_header(
title = "Number of rideshare journeys",
subtitle = "Time period: Nov - Dec"
)
result %>%
group_by(cab_type) %>%
summarize(
avg_price = mean(price),
total_dist = sum(distance)
) %>%
gt()
gt() %>%
tab_header(
title = "Number of rideshare journeys",
subtitle = "Time period: Nov - Dec"
)
walmart <- read.csv("walmart.csv")
View(walmart)
walmart
View(uber2)
uber2$timezone
View(uber)
uber %>%
gt() %>%
cols_label(
product = "cab_type",
Uber = "Uber",
Lyft = "Lyft"
)
View(uber2)
View(store)
View(vaccine)
View(wages)
set.seed(1)
dfComb <- data.frame(hour_adj = rep(0:4, 2),
count = sample(10:50, 10, replace = T),
word = c(rep("A", 5), rep("B", 5)))
ggplot(dfComb %>%
group_by(word) %>%
mutate(perc = count/sum(count)) %>%
ungroup(),
aes(x=hour_adj, y=perc, group=word, colour = word)) +
geom_line() +
geom_point() +
ggtitle(paste("Hourly Frequencies of Tweets")) +
xlab("Hour of Day") +
ylab("Count") +
scale_colour_discrete("Word", breaks=c("A","B"), labels=c("yid", "abbo")) +
scale_y_continuous(labels = scales::percent)
# install.packages("devtools")
devtools::install_github("itamarcaspi/experimentdatar")
library(dplyr)
library(experimentdatar)
data(social)
data(social)
View(social)
setwd("/Users/douglaskazibwe/Git")
# install.packages("devtools")
setwd("/Users/douglaskazibwe/Git")
# install.packages("devtools")
library(dplyr)
library(experimentdatar)
data(social)
?social
set.seed(1505) # for replicating the simulation
df <- crossing(economist = c("A", "B", "C"),
obs = 1:20) %>%
mutate(economist = as.factor(economist)) %>%
mutate(income = rnorm(n(), mean = 100, sd = 10)) %>%
mutate(consumption = 10 + 0.5 * income + rnorm(n(), sd = 10))
library(tidyverse)
set.seed(1505) # for replicating the simulation
df <- crossing(economist = c("A", "B", "C"),
obs = 1:20) %>%
mutate(economist = as.factor(economist)) %>%
mutate(income = rnorm(n(), mean = 100, sd = 10)) %>%
mutate(consumption = 10 + 0.5 * income + rnorm(n(), sd = 10))
View(df)
df %>%
ggplot(aes(y = consumption,
x = income)) +
geom_point()
library(knitr)
df %>%
ggplot(aes(x = consumption,
y = income,
color = economist)) +
geom_point()
knitr::kable(sample_n(df,6), format = "html")
df %>%
ggplot(aes(y = consumption,
x = income,
color = economist)) +
geom_point() +
geom_smooth(method = lm,
formula = y ~ 1,
se = FALSE,
color = "black") +
facet_wrap(~ economist) +
geom_vline(xintercept = 70, linetype = "dashed") +
theme(legend.position = "bottom")
df %>%
ggplot(aes(y = consumption,
x = income,
color = economist)) +
geom_point() +
geom_smooth(method = lm,
formula = y ~ poly(x,5),
se = FALSE,
color = "black") +
facet_wrap(~ economist) +
geom_vline(xintercept = 70, linetype = "dashed") +
theme(legend.position = "bottom")
df %>%
ggplot(aes(y = consumption,
x = income,
color = economist)) +
geom_point() +
geom_smooth(method = lm,
formula = y ~ x,
se = FALSE,
color = "black") +
facet_wrap(~ economist) +
geom_vline(xintercept = 70, linetype = "dashed") +
theme(legend.position = "bottom")
